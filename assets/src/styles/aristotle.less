@colors_border:#C6D3E3;
@colors_footer:#2E2526;
@colors_footer_text:#D0D1D5;
@colors_favourite:goldenrod;

/*
  Aristotle-MDR assume the breakpoints for bootstrap have been modified to those below.
  600px for small is the bootstrap standard values.
  However, 760px as the lower point for a "medium" screen ensures the the site retains functionality
  on smaller desktop widths. It seemed pointless to drop functionality.
  992px is the standard "medium" minimum, and between 760px and 992px this value

  an override for the main
*/

body {
    height: 100%;
}

@screen-sm-min:599px;
@screen-sm-max:760px;
@screen-md-regular:992px;

@media (max-width:@screen-md-regular)  {
    .container {
        width:100%;
    }
}
@media (min-width:@screen-md-regular)  {
    // Make body a column flex container
    body {
        display: -ms-flexbox;
        display: flex;
        flex-direction: column;
    }
    // Make the content grow to fill the body flex container
    body > #content {
        flex: 1 0 auto;
    }
}

@media (min-width:@screen-sm-min)  {
    #infobox-wrap {padding:0;border:none;background-color:white;}
    #infobox {margin:0;}
}
@media (max-width:@screen-sm-min)  {
    #content {padding:0 25px;}
}
@media (max-width:@screen-sm-max)  {
    #infobox {
        border:none;
        div.status ul {padding-left:20px;}
    }
}

@media (max-width:@screen-sm-min)  {
    span.visible-xs {
        display: inline-block !important;
    }
}

body .navbar {
    border-radius: 0px;
    flex: 0 0 auto;
}

#homeFaq {
    margin-top:50px;
    margin-bottom:20px;

    div.panel-body {
        height:100px;
    }
    .panel-heading h2 {
        height:30px;
        margin:0;
        font-size:13pt;
        text-align:center;
    }
    a {
        display:block;


    }
}

.inline_action {
    &:before {content: "["}
    &:after  {content: "]"}
    margin-left:2px;
    font-size:80%;
    font-weight:normal;
    color:darkblue;
    text-decoration:none;
    &:hover {
        text-decoration:underline;
    }
    &.enable {
        font-weight:bold;
    }
    display:inline-block !important;
}

dl.quickkeys {
    dt {
        float:left;
        padding-right:3px;
    }
    dd {
        padding-left:25px;
        display:block;
    }
}
dl {
    margin-top: 0px;
    dt:after {
        content: ":";
    }
}
#definition {
    margin-bottom:1em;
    font-size:120%;
    h2 {
        font-size:1.2em;
    }
}
dl .definition {
    padding-bottom:5px;
}
.definition {
    overflow-wrap: break-word;
    p {
        overflow-wrap: break-word;
    }
}
#alternate_names {
    dt {
        min-width:200px;
        padding-right:5px;
    }
    dt, dd {
        display: inline;
    }
    dd:after {
        content:"\a";
        white-space: pre;
    }
}
.no-notify, .notify {
    &:before {
        font-family: FontAwesome;
        text-align:center;
        width:1em;
        padding-left:3px;
    }
}
.no-notify {
    &:before {
        content: '\f0a2';
    }
}
.notify {
    &:before {
        content: '\f0f3';
    }
}


#supersedes {
    border-top:1px solid @colors_border;
    border-bottom:1px solid @colors_border;
    > li {
        display:inline-block;
        vertical-align:text-top;
        text-align:center;
        margin:0px 10px;
    }
}

a.expand {
    font-size:80%;
    color:gray !important;
    padding-left:5px;
}

#content {
    padding:15px 30px;
    background-color:white;
    h1 {
        font-size:1.6em;
        margin-top:10px;
        margin-bottom:10px;
        > span {
            font-size:80%;
        }
        small, .version {
            display:inline-block;
        }
        a, a:visited {
            color:inherit;
        }
        input {
            font-size:1em;
        }
        .version {
            color:black;
            font-size:70%;
            margin-left:0px;
            padding-left:0px;
            padding-right:3px;
            &:before {
                display:inline;
                color:gray;
                content:'v';
                padding-right:0px;
            }
        }
    }
    h2 {
        font-size:1.5em;
        margin-top: 10px;
        border-bottom:1px solid lightgray;
    }
    h3 {
        font-size:1.3em;
    }
    h4.border-bottom {
        border-bottom:1px solid lightgray;
    }
}

body footer.footer {
    clear:both;
    text-align:center;
    background-color:@colors_footer;
    padding:5px;
    margin-top:15px;
    color:@colors_footer_text;
    * {
        color:@colors_footer_text;
    }
    a {
        padding:0 2px;
        text-decoration:underline;
    }
}

.changeStatusDiv {
    margin-top:10px;
    display:table;
    &>span {
        display:table-cell;
        vertical-align:middle;
        padding-right:15px;
    }
    label {
        font-weight:bold;
    }
}

#deprecate {
    label {
        vertical-align:top;
    }
    .autocomplete-light-widget {
        display:block;
        /* span.deck {
            &>span {display:block ;}
            display:block;
        } */
    }
    .helptext {
        /* hides "ctrl+click" to select multiple */
        display:none !important;
    }
}

#changeStatus {
    margin-top:10px;
    display:table;
    &>div>ul:first-child, &>div>span:first-child {
        border-right:1px solid @colors_border;
    }
    &>div {
        display:table-row;
        &>* {
            display:table-cell;
            padding:15px;
            width:50%;
            li {
                list-style:none;
            }
        }
        &>span {
            font-weight:bold;
            text-align:center;
            border-bottom:1px solid @colors_border;
        }
    }
}

li.viewHistory {
    list-style-type:none;
    margin-left:-15px;
}

#infobox {
    > header {
        font-size:110%;
        font-weight:bold;
        border-bottom:1px solid gray;
        text-align:center;
    }
    font-size:90%;
    border:1px solid black;
    padding:5px;
    margin-left:15px;
    margin-top: 10px;
    background-color:white;
    dl {
        margin-bottom:0px;
        dt {clear:both;
            float:left;
            &.large {float:none;}
        }
        dd {
            margin-left:100px;
            &.large {
                margin-left:0px;
                ul {
                    padding-left:30px;
                }
            }
        }
    }
}

// Small infobox used on collections page currently
#sminfobox {
    clear: both;
    margin-top: 10px;
    border: 1px solid black;
    header {
        text-align: center;
        border-bottom: 1px solid gray;
        font-weight: bold;
    }
}

*:target {
    background-color:#ffffca;
}

*:hover > a.pilcrow {
    color:red;
}

a.pilcrow {
    color:transparent;
    text-decoration:none;
    margin-left:2px;
    padding: 2px 0;

    &:hover {
        color:white;
        background-color:red;
    }
}
label strong {
    font-weight:bold;
    color:red;
}

/* the alert heading just after the item title for concepts/administeredItems */
#progress.alert {
    text-indent:15px hanging;
    &:before {
        font-family: FontAwesome;
        content: '\f071 ';
        padding-right:3px;
    }
}

table.valueDomainRepresentation {
    @media only screen and (max-width: @screen-sm-min) {
        width:100%;
    }
    @media only screen and (min-width: @screen-sm-min) {
        width:65%;
    }
    td {
        padding:5px;
    }
}
/*
aside.creationTips {
    border:1px solid @colors_border;
    border-radius: 5px;
    padding:5px;

    header {
        text-align: center;
        border-bottom: 1px solid @colors_border;
        padding-bottom: 2px;
        font-size: 110%;
        font-weight: bold;
    }
}

#content form {
    padding-top:5px;
    margin-top:5px;

    fieldset {
        margin-right:15px;
        &.wizard {
            textarea {
                height:4em;
                width:100%;
            }
        }
        legend{
            font-size:105%;
        }
    }
    p {
        padding-top:0px;
        margin-top:0px;
        vertical-align:top;
        display:table;

        label {
            width:120px;
            display:table-cell;
            vertical-align:top;
        }
    }
    .errorlist {
        .error();

        list-style-type:none;
        margin-bottom:0px;
        vertical-align:middle;
    }
}
*/

.objectTitle {
    padding-left:15px;
    display:inline-block;
}
a.favourite {
    .fa{
        color:@colors_favourite;
    }
}

table.codeList {
    border-collapse:collapse;
    min-width:66%;
    width:auto;
    thead, tbody {
        border-bottom:1px solid @colors_border;
    }
    thead th, tbody td {
        border-left:1px solid @colors_border;
    }
    tr {
        margin: 0;
        td, th {
            padding: 2px;
        }
    }
    tbody tr {
        th {
            padding-left: 8px;
        }
        th, td {
            padding-right: 5px;
            vertical-align:top;
        }
    }
}


.status_definitions {
    clear:both;
    &>dt {
        clear:both;
        border-top:1px solid @colors_border;
        width:120px;
        float:left;
        text-align:center;
        padding-top:7px;
        &:after {
            content:"";
        }
    }
    &>dd {
        border-top:1px solid @colors_border;
        margin-left:120px;
        dl {
            margin-top:7px;
            margin-bottom:11px;
        }
    }
}

dl.browse, dl.treble_defintions {
    dd {
        padding-left:25px;
    }
}
dl.treble_defintions {
    a {display:block;}
}

.status_change_description textarea {
    min-width:100%;
    max-width:100%;
    resize:none;
    overflow:auto;
}

#loading_indicator.loading {
    position: absolute;
    left: 45%;
    top: 45%;
    z-index:2000; /* Needs to be greater than 1040 to go over the bootstrap modal-backdrop */
}

.su_action {
    background: repeating-linear-gradient(
            45deg,
            transparent,
            transparent 10px,
            rgba(250, 54, 54, 0.2) 10px,
            rgba(250, 54, 54, 0.2) 20px
    )
}

.staff_action {
    background: repeating-linear-gradient(
            -45deg,
            transparent,
            transparent 10px,
            rgba(250, 150, 54, 0.2) 10px,
            rgba(250, 150, 54, 0.2) 20px
    )
}

#collapseMoreVisibilityInfo {
    width:100%;
    margin-top:10px;
    padding-top:10px;
    border-top:1px solid lightgray;
}

.facets {
    padding: 0px;
}

[v-cloak] {
    display: none
}

.clear {
    clear: both;
}

.full-width {
    width: 100%;
}

.margin-above {
    margin-top: 10px;
}

.margin-above2x {
    margin-top: 20px;
}

.margin-below {
    margin-bottom: 10px;
}

.margin-below2 {
    margin-bottom: 20px;
}

.margin-left {
    margin-left: 10px;
}

.margin-right {
    margin-right: 10px;
}

.row-margin {
    margin-right: -15px;
    margin-left: -15px;
}

.padded {
    padding: 5px 10px;
}



.ta-fixed-width {
    resize: vertical
}

.extended-search-bar {

    @media (min-width: 992px) {
        min-width: 250px;
    }

    @media (min-width: 1200px) {
        min-width: 450px;
    }
}

.small-profile-picture {
    /* Required for proper ie11 scaling */
    max-width: 100%;
    max-height: 100%;
}

div.bleached-content {

    table {
        border: 1px solid black;
        padding: 5px;
        td {
            border-right: 1px solid black;
            border-top: 1px solid black;
            padding: 3px 5px;
            font-size: small;
        }
        th {
            border-right: 1px solid black;
            padding: 3px 5px;
            font-size: small;
        }
    }

    img {
        max-width: 100%;
    }

}

/* Style the button that is used to open and close the collapsible content */
.collapsible {
    background: none;
    color: inherit;
    cursor: pointer;
    border: none;
    text-align: left;
    outline: none;
}

/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
.active, .collapsible:hover {
    background-color: inherit;
}

/* Style the collapsible content. Note: hidden by default */
.content {
    padding: 0 18px;
    display: none;
    overflow: hidden;
    background-color: inherit;
}

/* Tab content with a border */
.border-tab-content {
    border-left: 1px solid #ddd;
    border-right: 1px solid #ddd;
    border-bottom: 1px solid #ddd;
    padding: 10px;
}

/* Custom css for outline button similar to Bootstrap 4 outline button */
.btn-outline {
      border: 0.5px dodgerblue;
      background-color: white;
      color: black;
      padding: 7px 14px;
      cursor: pointer;
}

.btn-outline-info {
  border-color: #2196F3;
  color: dodgerblue;
    background: none;
}

.btn-outline-info:hover {
  background: #8FC8FF;
  color: white;
}

/* textarea with more reasonable start width/height */
textarea.small-text-area {
    width: 250px;
    height: 100px
}

/* Helper indentation classes */
.indent-right-1 {
    padding-left: 1em;
}
.indent-right-2 {
    padding-left: 2em;
}
.indent-right-3 {
    padding-left: 3em;
}
.indent-right-4 {
    padding-left: 4em;
}
.indent-right-5 {
    padding-left: 5em;
}

.breadcrumb > li.maybe-long-breadcrumb-item {
    display: inline;
}

.custom_fields {
    dl {
        padding-bottom: 0px;
    }
    dt {
        font-size: 12pt;
        font-family: inherit;
        font-weight: 700;
        line-height: 1.1;
        
        // color: inherit;
        color: #444444;
        // font-weight: 500;
    }
    dd {
        padding-left: 3em;
        padding-bottom: 0.5em;
    }
    dd *:last-child {
        // Make the last child consistent
        padding-bottom:0px;
        margin-bottom:0px;
    }
}

.item_version {
    color: #444;
    font-size: 95%;
    display: inline-block;
    &:before { content: "(v "}
    &:after { content: ")"}
}

.context_help_link {
    font-size: 12pt;
}

header.editor {
    font-size: 14pt;
    color: #444;
}


ul.fancy_checkbox_list  {
    label {
        font-weight:normal;
        padding:3px 10px;
        margin:0px;
        display:inline-block;
        width:160px;
    }

    &>li {
        display:block;
        width:200px;

        [type="checkbox"],[type="radio"] {
          position: absolute;
          left: -9999px;

            &:focus + label {
               outline: -webkit-focus-ring-color auto 5px;
               background-color: whiteSmoke
            }

            &:hover + label {
               background-color: whiteSmoke;
            }
            & + label:before {
                font-family: 'FontAwesome';
                display: table-cell;
                box-sizing: border-box;
                width: 16px;
            }
            & ~ label >  span {
                display: table-cell;
                padding-left: 5px;
            }
        }

        /*The label will contain the icon and the text, will grab the focus*/
        label {
            width:100%;
            cursor: pointer;
            display: table;
        }
        /* toggle font awesome icon*/
        [type="checkbox"]:checked + label:before {
          content: "\f046";
        }
        [type="checkbox"]:not(:checked) + label:before {
          content: "\f096";
        }

        [type="radio"]:checked + label:before {
          content: "\f05d";
        }
        [type="radio"]:not(:checked) + label:before {
          content: "\f1db";
        }
    }
}

body > nav.main.navbar {
    border-width: 0px;
}

.aristotle_cloud_custom_main_page_container {
    width: 100%;
    overflow: hidden;
}

.badge-info {
    background-color: #3a87ad !important;
}

.badge-info:hover {
    background-color: #2d6987 !important;
}

// Overriden because of panel-headings setting a dark blue color
.btn-danger {
    color: white !important;
}

/*
The purpose of the following css is to format the table for the registration statuses table.
Thanks to: https://css-tricks.com/responsive-data-tables/
Max width before this PARTICULAR table gets nasty
This query will take effect for any screen smaller than 760px
and also iPads specifically.
*/
@media
only screen
and (max-width: 760px), (min-device-width: 760px)
and (max-device-width: 1024px)  {
    .registration_status_table {
        /* Force table to not be like tables anymore */
        table, thead, tbody, th, td, tr {
            display: block;
        }

        /* Hide table headers (but not display: none;, for accessibility) */
        thead tr {
            position: absolute;
            top: -9999px;
            left: -9999px;
        }

        //tr { border: 1px solid #ccc; }

        td:first-child {border-top: none;}

        td {
            /* Behave  like a "row" */
            border: none;
            border-bottom: 1px solid #eee;
            position: relative;
            padding-left: 50% !important;
            padding-top: 2px;
            padding-bottom: 2px;
        }

        td:before {
            /* Now like a table header */
            position: absolute;
            /* Top/left values mimic padding */
            top: 0;
            left: 10px;
            width: 45%;
            padding-right: 10px;
            white-space: nowrap;
        }

        /*
        Label the data
        */
        td:nth-of-type(1):before { content: 'State'; font-weight: bold; padding-top: 8px;}
        td:nth-of-type(2):before { content: 'Date registration effective'; font-weight: bold; padding-top: 8px;}
        td:nth-of-type(3):before { content: 'Date registration expires'; font-weight: bold; padding-top: 8px;}
        td:nth-of-type(4):before { content: 'Administrative note'; font-weight: bold; padding-top: 8px;}

        /* Zebra striping */
        tr:nth-of-type(odd) {
            background: #d3e4f1;
        }
        tr:nth-of-type(even) {
            background: white;
            color: black;
        }
    }
}

.django-ckeditor-widget {
    width:100%;
}

a[aria-expanded=true] .fa-chevron-right {
    display: none;
}

a[aria-expanded=false] .fa-chevron-down {
    display: none;
}
.thead-dark {
    th {
        color: black;
        background-color: rgba(232, 232, 232, 0.4);
        border-color: rgba(232, 232, 232, 0.4);
    }
}

.no-decoration {
    // This class exists to remove decoration, e.g. underlines or highlights from text
    text-decoration: none !important;
    border-bottom: none !important;
}

// Add margin around ckeditor contents
// This is required to keep the look when using divarea
.cke_contents {
    margin: 20px !important;
}

/*
Add an asterisk to a form required field inside a django {% bootstrap_field %}
To make this work it is necessary to add the required_css_class="required" attribute in the template tag.
Usage:

   {% bootstrap_field form.state placeholder="" layout="horizontal" required_css_class="required" horizontal_field_class="col-md-5" %}

*/

.form-group.required label:after {
    content: ' *'; font-weight: bold;
}

/*
Add an asterisk to a form label inside a {% bootstrap_label %}
To make this work it is necessary to add the label_class="required" attribute in the template tag.
Usage:

   {% bootstrap_label form.registrationAuthorities.label label_for="id_registrationAuthorities" label_class="required" %}

*/

label.required:after {
    content: ' *'; font-weight: bold;
}

.registration-authorities-list {
    list-style-type: none;
    padding-left: 0;
}

.no-link-decoration {
  text-decoration: none !important;
  color: black !important;
 }

.break-text {
    word-break: break-all;
}